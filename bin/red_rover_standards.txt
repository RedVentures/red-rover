1. Singleton Pattern: This pattern is crucial as it ensures that a class only has one instance, and provides a global point of access to it. It is widely used in different parts of the codebase for managing environment variables, logging, driver objects, caching, thread pools, and database connections. 

2. Factory Pattern: This pattern is important as it provides an interface for creating objects in a superclass, but allows subclasses to alter the type of objects that will be created. It is used for creating different types of API requests and also for managing and manipulating collections of objects.

3. Observer Pattern: It is essential as it allows an object to notify other objects about changes in its state. This pattern is used to observe changes in pull requests and in communication between different components of the application.

4. Modular Design Pattern: This pattern is crucial for maintaining a clean and organized codebase. It allows for the encapsulation of private and public methods and variables within a single, unique namespace.

5. GitHub Actions Workflow Pattern: This pattern is vital for automating software workflows directly in the repository. It is used for continuous integration (CI) and continuous deployment (CD) purposes.

Frameworks: Python with libraries like `pandas`, `dotenv`, `tiktoken`, `os`, `openai`, and `requests` are used alongside Node.js, a JavaScript runtime built on Chrome's V8 JavaScript engine. Also, OpenAI's GPT-3 is used for generating and summarizing text.